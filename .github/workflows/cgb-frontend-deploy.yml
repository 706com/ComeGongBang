name: Deploy Vue to AWS EC2

# 배포 조건
# 1) frontend/develop -> develop MERGE
# 2) Labeling

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  deploy:
    if: github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'frontend') &&
      contains(github.event.pull_request.labels.*.name, 'operation')
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub Actions Runner에서 코드를 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Node.js 설치
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # Vue 3.x과 적합한 Node.js 버전

      # 3. npm 종속성 설치
      - name: Install npm dependencies
        run: |
          cd frontend
          npm install

      # 4. Vue 앱 빌드
      - name: Build Vue Application
        run: |
          cd frontend
          npm run build

      # 날짜와 시간 포맷 설정
      - name: Set timestamp
        run: echo "DATE_TIME=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      # 5. S3에 dist 폴더와 default.conf 백업
      - name: Upload backupFile to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: ''
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'frontend/dist'
          DEST_DIR: "backups/${{ env.DATE_TIME }}/dist"

      - name: Upload default.conf to S3
        run: |
          aws s3 cp cicd/frontend/aws/default.conf s3://${{ secrets.AWS_S3_BUCKET }}/backups/${{ env.DATE_TIME }}/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      # 6. EC2 서버에서 dist 파일을 /var/www/html/로 복사
      - name: Move dist to /var/www/html
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST_FRONT_A }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY_FRONT_A }}
          script: |
            sudo cp -r /home/ubuntu/deploy/dist/* /var/www/html/dist/  # dist 파일을 복사
            sudo chown -R www-data:www-data /var/www/html/  # 소유권 변경

      # 7. Nginx 설정 파일 덮어쓰고 재시작
      - name: Move Nginx Configuration
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST_FRONT_A }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY_FRONT_A }}
          script: |
            sudo cp /home/ubuntu/deploy/default.conf /etc/nginx/sites-available/default  # Nginx 설정 파일 복사
            sudo nginx -s reload  # Nginx 설정 재시작

#      # 8. Nginx 재시작
#      - name: Restart Nginx
#        uses: appleboy/ssh-action@v0.1.9
#        with:
#          host: ${{ secrets.EC2_HOST_FRONT_A }}
#          username: ubuntu
#          key: ${{ secrets.EC2_SSH_KEY_FRONT_A }}
#          script: |
#            sudo systemctl reload nginx